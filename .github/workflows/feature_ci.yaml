name: 'Test feature branch'
on:
  push:
    branches:
      - '*'
      - '!master'
  pull_request:
    branches:
      - master
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
    
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

      - name: Cache Poetry venv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.venv
          key: poetry-feature-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-feature-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry Configuration for install
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.path ~/.venv

      - name: Install Project Dependencies if needed.
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install
      
      - name: Code Quality
        run: |
          poetry run black . --check

      - name: Test Code
        env: 
          SLACK_API_KEY: ${{secrets.SLACK_API_KEY}}
        run: poetry run pytest